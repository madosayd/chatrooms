{"version":3,"sources":["chatroom.js"],"names":["Chatrooms","username","room_name","firestore","firebase","db","collection","stop","message","chatData","time","Timestamp","fromDate","Date","add","callback","where","orderBy","onSnapshot","snapshot","docChanges","forEach","change","type","doc","room","localStorage","setItem"],"mappings":";;;;;;;;AAAA;;;;IAIMA,S;;;AACJ,qBAAYC,QAAZ,EAAsBC,SAAtB,EAAiC;AAAA;;AAC/B,SAAKD,QAAL,GAAgBA,QAAhB;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACA,SAAKC,SAAL,GAAiBC,QAAQ,CAACD,SAA1B;AACA,SAAKE,EAAL,GAAUA,EAAE,CAACC,UAAH,CAAc,WAAd,CAAV;AACA,SAAKC,IAAL;AACD;AACD;;;;;;;;;;4BAMQC,O,EAAS;AACf,UAAMC,QAAQ,GAAG;AACfD,QAAAA,OAAO,EAAEA,OADM;AAEfN,QAAAA,SAAS,EAAE,KAAKA,SAFD;AAGfQ,QAAAA,IAAI,EAAE,KAAKP,SAAL,CAAeQ,SAAf,CAAyBC,QAAzB,CAAkC,IAAIC,IAAJ,EAAlC,CAHS;AAIfZ,QAAAA,QAAQ,EAAE,KAAKA;AAJA,OAAjB;AAOA,aAAO,KAAKI,EAAL,CAAQS,GAAR,CAAYL,QAAZ,CAAP;AACD;AACD;;;;;;;;4BAKQM,Q,EAAU;AAChB,WAAKR,IAAL,GAAY,KAAKF,EAAL,CACTW,KADS,CACH,WADG,EACU,IADV,EACgB,KAAKd,SADrB,EAETe,OAFS,CAED,MAFC,EAGTC,UAHS,CAGE,UAAAC,QAAQ,EAAI;AACtBA,QAAAA,QAAQ,CAACC,UAAT,GAAsBC,OAAtB,CAA8B,UAAAC,MAAM,EAAI;AACtC,cAAIA,MAAM,CAACC,IAAP,KAAgB,OAApB,EAA6B;AAC3BR,YAAAA,QAAQ,CAACO,MAAM,CAACE,GAAR,CAAR;AACD;AACF,SAJD;AAKD,OATS,CAAZ;AAUD;AACD;;;;;;;;+BAKWC,I,EAAM;AACf,WAAKvB,SAAL,GAAiBuB,IAAjB;AACA,WAAKlB,IAAL;AACD;AACD;;;;;;;;mCAKeN,Q,EAAU;AACvB,WAAKA,QAAL,GAAgBA,QAAhB;AACAyB,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiC1B,QAAjC;AACD","sourcesContent":["/**\r\n *@class Chatrooms\r\n *@description General class through which the chat is controlled | Add | Update | Delete ..etc\r\n **/\r\nclass Chatrooms {\r\n  constructor(username, room_name) {\r\n    this.username = username;\r\n    this.room_name = room_name;\r\n    this.firestore = firebase.firestore;\r\n    this.db = db.collection(\"chatrooms\");\r\n    this.stop;\r\n  }\r\n  /**\r\n   *@method addData\r\n   *@description Add data to Database\r\n   *@param message The message is passed by the user\r\n   *@returns Data\r\n   **/\r\n  addData(message) {\r\n    const chatData = {\r\n      message: message,\r\n      room_name: this.room_name,\r\n      time: this.firestore.Timestamp.fromDate(new Date()),\r\n      username: this.username\r\n    };\r\n\r\n    return this.db.add(chatData);\r\n  }\r\n  /**\r\n   *@method getData\r\n   *@description Fetch data from the database\r\n   *@param callback\r\n   **/\r\n  getData(callback) {\r\n    this.stop = this.db\r\n      .where(\"room_name\", \"==\", this.room_name)\r\n      .orderBy(\"time\")\r\n      .onSnapshot(snapshot => {\r\n        snapshot.docChanges().forEach(change => {\r\n          if (change.type === \"added\") {\r\n            callback(change.doc);\r\n          }\r\n        });\r\n      });\r\n  }\r\n  /**\r\n   *@method updateRoom\r\n   *@description Change the main room to a new chat room\r\n   *@param room Pass the new room by the user\r\n   **/\r\n  updateRoom(room) {\r\n    this.room_name = room;\r\n    this.stop();\r\n  }\r\n  /**\r\n   *@method updateUsername\r\n   *@description Updata username\r\n   *@param username Pass the username by the user\r\n   **/\r\n  updateUsername(username) {\r\n    this.username = username;\r\n    localStorage.setItem(\"username\", username);\r\n  }\r\n}\r\n"],"file":"chatroom.js"}