{"version":3,"sources":["chatroom.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","Chatrooms","username","room_name","this","firestore","firebase","db","collection","stop","value","message","chatData","time","Timestamp","fromDate","Date","add","callback","where","orderBy","onSnapshot","snapshot","docChanges","forEach","change","type","doc","room","localStorage","setItem"],"mappings":"AAAA,aAEA,SAASA,gBAAgBC,EAAUC,GAAe,KAAMD,aAAoBC,GAAgB,MAAM,IAAIC,UAAU,qCAEhH,SAASC,kBAAkBC,EAAQC,GAAS,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAE,IAAIE,EAAaH,EAAMC,GAAIE,EAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,UAAWF,IAAYA,EAAWG,UAAW,GAAMC,OAAOC,eAAeT,EAAQI,EAAWM,IAAKN,IAE7S,SAASO,aAAad,EAAae,EAAYC,GAAmJ,OAAhID,GAAYb,kBAAkBF,EAAYiB,UAAWF,GAAiBC,GAAad,kBAAkBF,EAAagB,GAAqBhB,EAMzM,IAAIkB,UAEJ,WACE,SAASA,EAAUC,EAAUC,GAC3BtB,gBAAgBuB,KAAMH,GAEtBG,KAAKF,SAAWA,EAChBE,KAAKD,UAAYA,EACjBC,KAAKC,UAAYC,SAASD,UAC1BD,KAAKG,GAAKA,GAAGC,WAAW,aACxBJ,KAAKK,KAgEP,OAtDAZ,aAAaI,EAAW,CAAC,CACvBL,IAAK,UACLc,MAAO,SAAiBC,GACtB,IAAIC,EAAW,CACbD,QAASA,EACTR,UAAWC,KAAKD,UAChBU,KAAMT,KAAKC,UAAUS,UAAUC,SAAS,IAAIC,MAC5Cd,SAAUE,KAAKF,UAEjB,OAAOE,KAAKG,GAAGU,IAAIL,KAQpB,CACDhB,IAAK,UACLc,MAAO,SAAiBQ,GACtBd,KAAKK,KAAOL,KAAKG,GAAGY,MAAM,YAAa,KAAMf,KAAKD,WAAWiB,QAAQ,QAAQC,WAAW,SAAUC,GAChGA,EAASC,aAAaC,QAAQ,SAAUC,GAClB,UAAhBA,EAAOC,MACTR,EAASO,EAAOE,WAWvB,CACD/B,IAAK,aACLc,MAAO,SAAoBkB,GACzBxB,KAAKD,UAAYyB,EACjBxB,KAAKK,SAQN,CACDb,IAAK,iBACLc,MAAO,SAAwBR,GAC7BE,KAAKF,SAAWA,EAChB2B,aAAaC,QAAQ,WAAY5B,OAI9BD,EAxET","sourcesContent":["/**\r\n *@class Chatrooms\r\n *@description General class through which the chat is controlled | Add | Update | Delete ..etc\r\n **/\r\nclass Chatrooms {\r\n  constructor(username, room_name) {\r\n    this.username = username;\r\n    this.room_name = room_name;\r\n    this.firestore = firebase.firestore;\r\n    this.db = db.collection(\"chatrooms\");\r\n    this.stop;\r\n  }\r\n  /**\r\n   *@method addData\r\n   *@description Add data to Database\r\n   *@param message The message is passed by the user\r\n   *@returns Data\r\n   **/\r\n  addData(message) {\r\n    const chatData = {\r\n      message: message,\r\n      room_name: this.room_name,\r\n      time: this.firestore.Timestamp.fromDate(new Date()),\r\n      username: this.username\r\n    };\r\n\r\n    return this.db.add(chatData);\r\n  }\r\n  /**\r\n   *@method getData\r\n   *@description Fetch data from the database\r\n   *@param callback\r\n   **/\r\n  getData(callback) {\r\n    this.stop = this.db\r\n      .where(\"room_name\", \"==\", this.room_name)\r\n      .orderBy(\"time\")\r\n      .onSnapshot(snapshot => {\r\n        snapshot.docChanges().forEach(change => {\r\n          if (change.type === \"added\") {\r\n            callback(change.doc);\r\n          }\r\n        });\r\n      });\r\n  }\r\n  /**\r\n   *@method updateRoom\r\n   *@description Change the main room to a new chat room\r\n   *@param room Pass the new room by the user\r\n   **/\r\n  updateRoom(room) {\r\n    this.room_name = room;\r\n    this.stop();\r\n  }\r\n  /**\r\n   *@method updateUsername\r\n   *@description Updata username\r\n   *@param username Pass the username by the user\r\n   **/\r\n  updateUsername(username) {\r\n    this.username = username;\r\n    localStorage.setItem(\"username\", username);\r\n  }\r\n}\r\n"],"file":"chatroom-min.js"}